{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputDate = document.querySelector('#datetime-picker')\nconst btnStart = document.querySelector('[data-start]')\nconst elemDateDay = document.querySelector('[data-days]')\nconst elemDateHours = document.querySelector('[data-hours]')\nconst elemDateMinutes = document.querySelector('[data-minutes]')\nconst elemDateSeconds = document.querySelector('[data-seconds]')\n\nlet timerId = null\nlet selectedDate = null \n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        if(selectedDates[0] < new Date()){\n            return iziToast.error({\n                position:\"topRight\",\n                message: \"Please choose a date in the future\"\n            })\n        }\n        selectedDate = selectedDates[0]\n        btnStart.removeAttribute('disabled')\n    },\n};\n\nbtnStart.addEventListener('click', createTimer)\n\nflatpickr(inputDate, options)\n\nfunction createTimer(){\n    timerId = setInterval(updateTimer, 1000)\n    btnStart.setAttribute('disabled', true)\n    inputDate.setAttribute('disabled', true)\n    \n}\n\nfunction updateTimer(){\n    const time = selectedDate - new Date()\n    const { days, hours, minutes, seconds } = convertMs(time)\n    elemDateDay.textContent = addLeadingZero(days)\n    elemDateHours.textContent = addLeadingZero(hours)\n    elemDateMinutes.textContent = addLeadingZero(minutes)\n    elemDateSeconds.textContent = addLeadingZero(seconds)\n    if(time < 1000){\n        clearInterval(timerId)\n        inputDate.removeAttribute('disabled')\n    }\n    \n}\n\n\nfunction addLeadingZero(value){\n    return String(value).padStart(2, 0)\n}\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }"],"names":["inputDate","btnStart","elemDateDay","elemDateHours","elemDateMinutes","elemDateSeconds","timerId","selectedDate","options","selectedDates","iziToast","createTimer","flatpickr","updateTimer","time","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"yIAKA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAgB,SAAS,cAAc,cAAc,EACrDC,EAAkB,SAAS,cAAc,gBAAgB,EACzDC,EAAkB,SAAS,cAAc,gBAAgB,EAE/D,IAAIC,EAAU,KACVC,EAAe,KAEnB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,GAAGA,EAAc,CAAC,EAAI,IAAI,KACtB,OAAOC,EAAS,MAAM,CAClB,SAAS,WACT,QAAS,oCACzB,CAAa,EAELH,EAAeE,EAAc,CAAC,EAC9BR,EAAS,gBAAgB,UAAU,CACtC,CACL,EAEAA,EAAS,iBAAiB,QAASU,CAAW,EAE9CC,EAAUZ,EAAWQ,CAAO,EAE5B,SAASG,GAAa,CAClBL,EAAU,YAAYO,EAAa,GAAI,EACvCZ,EAAS,aAAa,WAAY,EAAI,EACtCD,EAAU,aAAa,WAAY,EAAI,CAE3C,CAEA,SAASa,GAAa,CAClB,MAAMC,EAAOP,EAAe,IAAI,KAC1B,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EAAUL,CAAI,EACxDZ,EAAY,YAAckB,EAAeL,CAAI,EAC7CZ,EAAc,YAAciB,EAAeJ,CAAK,EAChDZ,EAAgB,YAAcgB,EAAeH,CAAO,EACpDZ,EAAgB,YAAce,EAAeF,CAAO,EACjDJ,EAAO,MACN,cAAcR,CAAO,EACrBN,EAAU,gBAAgB,UAAU,EAG5C,CAGA,SAASoB,EAAeC,EAAM,CAC1B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,CACtC,CAEA,SAASF,EAAUG,EAAI,CAQnB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}